{% extends 'base.html.twig' %}

{% block title %}Update Car{% endblock %}

{% block body %}
 <div class="mx-auto max-w-3xl py-8">
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
            <h2 class="text-xl font-semibold text-gray-800">Update Car</h2>
            <a href="{{ path('app_car') }}" class="text-blue-600 hover:text-blue-800 flex items-center">
            <i class="ri-arrow-left-line mr-1"></i>
            Back to List
            </a>
        </div>
        </div>
        {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'data-turbo': 'false', 'data-propagation': 'false'}}) }}
        <!-- Form fields remain the same -->
            <div class="p-6">
        <div class="grid grid-cols-1 gap-6 mb-6">
            <!-- Car Model -->
            <div>
                <label for="car-model" class="block text-sm font-medium text-gray-700 mb-1">Car Model</label>
                {{ form_widget(form.model, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}}) }}
                <div class="text-red-500 text-sm mt-1">{{ form_errors(form.model) }}</div>
            </div>
            <!-- Car Type -->
            <div>
                <label for="car-brand" class="block text-sm font-medium text-gray-700 mb-1">Car Brand</label>
                {{ form_widget(form.brand, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}}) }}
                <error class="text-red-500 text-sm mt-1">{{ form_errors(form.brand) }}</error>
            </div>
            <!-- Number of Seats -->
            <div>
                <label for="seats" class="block text-sm font-medium text-gray-700 mb-1">Number of Seats</label>
                {{ form_widget(form.numPlace, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}}) }}
                <error class="text-red-500 text-sm mt-1">{{ form_errors(form.numPlace) }}</error>
            </div>
            <!-- Assign Driver (Optional) -->
                            <div class="mb-6">
                    <label for="driver" class="block text-sm font-medium text-gray-700 mb-1">Assign Driver (Optional)</label>
                    {{ form_widget(form.idDriver, {
                        'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}
                    }) }}
                </div>
          
            <div class="mb-6">
                <label class="block text-sm font-medium text-gray-700 mb-1">Car Images</label>
                <div class="relative">
                    <!-- Styled upload zone -->
                    <div id="upload-zone" class="flex flex-col items-center justify-center w-full h-48 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 transition duration-300">
                        <div class="flex flex-col items-center justify-center pt-5 pb-6">
                            <svg class="w-10 h-10 mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                            </svg>
                            <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                            <p class="text-xs text-gray-500">PNG, JPG or JPEG (Max 2MB)</p>
                        </div>
                        
                        <!-- Hidden original file input -->
                        {{ form_widget(form.image, {
                            'attr': {
                                'class': 'hidden',
                                'accept': 'image/png, image/jpeg, image/jpg'
                            }
                        }) }}
                    <!-- Hidden file input for drag-and-drop functionality -->        
            <!-- Clickable overlay -->
            <label for="{{ form.image.vars.id }}" class="absolute inset-0 cursor-pointer"></label>
        </div>
    {% if currentImageUrl is not empty %}
    <div id="current-image" class="mt-4">
        <img src="{{ currentImageUrl }}" alt="Current Image" class="w-full h-auto max-h-64 object-cover rounded-lg shadow">
    </div>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const fileInput = document.getElementById('{{ form.image.vars.id }}');
        const currentImage = document.getElementById('current-image');
        const removeBtn = document.getElementById('remove-preview');
        
        if (fileInput && currentImage) {
            fileInput.addEventListener('change', function() {
                if (this.files.length > 0) {
                    currentImage.style.display = 'none';
                } else {
                    currentImage.style.display = 'block';
                }
            });
        }
        
        if (removeBtn && currentImage) {
            removeBtn.addEventListener('click', function() {
                currentImage.style.display = 'block';
            });
        }
    });
    </script>
    {% endif %}
        <!-- Image preview section -->
        <div id="image-preview" class="hidden mt-4 relative">
            <img id="preview" class="w-full h-auto max-h-64 object-cover rounded-lg shadow" alt="Image Preview">
            <button type="button" id="remove-preview" class="absolute top-2 right-2 bg-red-500 text-white rounded-full p-2 hover:bg-red-600 shadow transition">
                <svg class="w-4 h-4" fill="white" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    </div>
    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.image) }}</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const fileInput = document.getElementById('{{ form.image.vars.id }}');
    const previewImg = document.getElementById('preview');
    const imagePreview = document.getElementById('image-preview');
    const removeBtn = document.getElementById('remove-preview');

    if (fileInput) {
        fileInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (!file) return;

            const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];
            if (!validTypes.includes(file.type)) {
                alert('Only JPG, PNG, and JPEG files are allowed');
                return;
            }

            if (file.size > 2 * 1024 * 1024) {
                alert('File size exceeds 2MB limit');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                previewImg.src = e.target.result;
                imagePreview.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        });
    }

    if (removeBtn) {
        removeBtn.addEventListener('click', function() {
            previewImg.src = '';
            imagePreview.classList.add('hidden');
            fileInput.value = '';
        });
    }
});
</script>

    
        
        <div class="flex justify-end space-x-4 mt-4 py-2 px-6">
        {{ form_widget(form.reset, {'attr': {'class': 'px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400'}}) }}
        {{ form_widget(form.submit, {'attr': {'class': 'px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700', 'value': 'Update'}}) }}
        </div>
        {{ form_end(form) }}
    </div>
    </div>
</div>
{% endblock %}
