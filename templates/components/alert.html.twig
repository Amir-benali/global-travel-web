{# Alert component with the same parameters as before #}

{% set types = {
    'success': {
        'bg': 'bg-green-50',
        'border': 'border-green-400',
        'text': 'text-green-800',
        'icon': 'check-circle',
        'iconColor': 'text-green-500'
    },
    'error': {
        'bg': 'bg-red-50',
        'border': 'border-red-400',
        'text': 'text-red-800',
        'icon': 'x-circle',
        'iconColor': 'text-red-500'
    },
    'warning': {
        'bg': 'bg-yellow-50',
        'border': 'border-yellow-400',
        'text': 'text-yellow-800',
        'icon': 'exclamation',
        'iconColor': 'text-yellow-500'
    },
    'info': {
        'bg': 'bg-blue-50',
        'border': 'border-blue-400',
        'text': 'text-blue-800',
        'icon': 'information-circle',
        'iconColor': 'text-blue-500'
    }
} %}

{% set type = type|default('info') %}
{% set dismissible = dismissible|default(true) %}
{% set buttons = buttons|default([]) %}
{% set alertStyle = types[type] %}

<div 
    class="alert-wrapper relative my-8 max-w-2xl mx-auto animate-fade-in-down" 
    x-data="{ show: true }" 
    x-show="show" 
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0 transform -translate-y-2"
    x-transition:enter-end="opacity-100 transform translate-y-0"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-100 transform translate-y-0"
    x-transition:leave-end="opacity-0 transform -translate-y-2">
    <div class="rounded-lg border-l-4 p-8 shadow-lg {{ alertStyle.bg }} {{ alertStyle.border }} min-h-[250px] flex flex-col">
        {% if dismissible %}
        <div class="self-end mb-2">

        </div>
        {% endif %}
        
        <div class="flex flex-col items-center justify-center flex-grow text-center">
            <div class="mb-4">
                {% if alertStyle.icon == 'check-circle' %}
                    <svg class="h-12 w-12 {{ alertStyle.iconColor }}" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                {% elseif alertStyle.icon == 'x-circle' %}
                    <svg class="h-12 w-12 {{ alertStyle.iconColor }}" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                {% elseif alertStyle.icon == 'exclamation' %}
                    <svg class="h-12 w-12 {{ alertStyle.iconColor }}" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                {% else %}
                    <svg class="h-12 w-12 {{ alertStyle.iconColor }}" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                {% endif %}
            </div>
            
            <p class="text-xl font-medium {{ alertStyle.text }} mb-6">{{ message }}</p>
            
            {% if buttons|length > 0 %}
            <div class="flex space-x-3 justify-center">
                {% for button in buttons %}
                    {% if button.url is defined and button.url %}
                        <a href="{{ button.url }}" 
                           class="px-5 py-2.5 text-base font-medium rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 {{ button.class }}" 
                           onclick="{{ button.onclick|default('') }}">
                            {{ button.text }}
                        </a>
                    {% else %}
                        <button type="button"
                                class="px-5 py-2.5 text-base font-medium rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 {{ button.class }}" 
                                onclick="{{ button.onclick|default('') }}">
                            {{ button.text }}
                        </button>
                    {% endif %}
                {% endfor %}
            </div>
            {% endif %}
        </div>
    </div>
</div>

<style>
    @keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translate3d(0, -20px, 0);
        }
        to {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }

    .animate-fade-in-down {
        animation: fadeInDown 0.5s ease-out;
    }
</style>
