{% extends 'front.html.twig' %}

{% block title %}Book a Flight{% endblock %}

{% block body %}
    <div class="container mx-auto mt-10">
        <h1 class="text-3xl font-bold mb-8 text-center text-blue-700">Book a Flight</h1>

        <div class="grid grid-cols-12 gap-6">
            <!-- Flight Info -->
            <div class="col-span-3 bg-white shadow-lg rounded-xl p-6">
                <h2 class="text-xl font-semibold mb-4 text-indigo-600">Flight Information</h2>
                <ul class="space-y-3 text-sm text-gray-800">
                    <li><strong>Number:</strong> {{ flight.flightNumber }}</li>
                    <li><strong>Airline:</strong> {{ flight.airlineName }}</li>
                    <li><strong>Route:</strong> {{ flight.departureCountry }} → {{ flight.arrivalCountry }}</li>
                    <li><strong>Departure:</strong> {{ flight.departureAirportName }} ({{ flight.departureTime|date('d/m/y H:i') }})</li>
                    <li><strong>Arrival:</strong> {{ flight.arrivalAirportName }} ({{ flight.arrivalTime|date('d/m/y H:i') }})</li>
                    <li><strong>Base Price:</strong> {{ flight.flightBasePrice }} €</li>
                </ul>
            </div>

            <!-- Booking Form -->
            <div class="col-span-5 bg-white shadow-lg rounded-xl p-6">
                {{ form_start(form, {'attr': {'class': 'space-y-4', 'novalidate': 'novalidate', 'enctype': 'multipart/form-data'}}) }}

                <div>
                    {{ form_label(form.ticketClass, 'Ticket Class', { 'label_attr': { 'class': 'block text-sm font-medium text-gray-700 mb-1' } }) }}
                    {{ form_widget(form.ticketClass, { 'attr': { 'class': 'w-full border rounded-md px-4 py-2', 'data-base-price': flight.flightBasePrice } }) }}
                    <div class="text-red-500 text-xs mt-1">{{ form_errors(form.ticketClass) }}</div>
                </div>

                <div>
                    {{ form_label(form.ticketPrice, 'Ticket Price', { 'label_attr': { 'class': 'block text-sm font-medium text-gray-700 mb-1' } }) }}
                    {{ form_widget(form.ticketPrice, { 'attr': { 'class': 'w-full border rounded-md px-4 py-2', 'readonly': 'readonly' } }) }}
                    <div class="text-red-500 text-xs mt-1">{{ form_errors(form.ticketPrice) }}</div>
                </div>

                <div>
                    {{ form_label(form.selectedUser, 'Select a User', { 'label_attr': { 'class': 'block text-sm font-medium text-gray-700 mb-1' } }) }}
                    {{ form_widget(form.selectedUser, { 'attr': { 'class': 'w-full border rounded-md px-4 py-2', 'onchange': 'updatePassengerEmail(this)' } }) }}
                    <div class="text-red-500 text-xs mt-1">{{ form_errors(form.selectedUser) }}</div>
                </div>

                <div>
                    {{ form_label(form.passengerEmail, 'Passenger Email', { 'label_attr': { 'class': 'block text-sm font-medium text-gray-700 mb-1' } }) }}
                    {{ form_widget(form.passengerEmail, { 'attr': { 'class': 'w-full border rounded-md px-4 py-2', 'id': 'passenger-email' } }) }}
                    <div class="text-red-500 text-xs mt-1">{{ form_errors(form.passengerEmail) }}</div>
                </div>

                <div id="selected-seat" style="display: none;">
                    {{ form_row(form.seatNumber) }}
                </div>

                <div class="flex justify-end space-x-3 pt-4">
                    <a href="{{ path('front_flight') }}" class="px-4 py-2 border rounded-md text-gray-700 hover:bg-gray-100">Cancel</a>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Book</button>
                </div>

                {{ form_end(form) }}
            </div>

            <!-- Seat Map -->
            <div class="col-span-4 bg-white shadow-lg rounded-xl p-6">
                <h2 class="text-xl font-semibold mb-4 text-green-700 text-center">Choose Your Seat</h2>

                <div id="seat-map" class="grid grid-cols-5 gap-3 justify-items-center mb-6">
                    {% for seat in flight.availableSeats %}
                        {% if seat in flight.unavailableSeats %}
                            <button
                                    type="button"
                                    class="seat w-10 h-10 bg-red-500 text-white text-sm font-medium rounded cursor-not-allowed"
                                    data-seat="{{ seat }}"
                                    disabled>
                                {{ seat }}
                            </button>
                        {% else %}
                            <button
                                    type="button"
                                    class="seat w-10 h-10 bg-green-500 text-white text-sm font-medium rounded hover:bg-green-600"
                                    data-seat="{{ seat }}"
                                    onclick="selectSeat(this)">
                                {{ seat }}
                            </button>
                        {% endif %}
                    {% else %}
                        <p class="text-center text-sm text-gray-500 col-span-5">No available seats.</p>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const ticketClassField = document.querySelector('[name$="[ticketClass]"]');
            const ticketPriceField = document.querySelector('[name$="[ticketPrice]"]');
            const selectedUserField = document.querySelector('[name$="[selectedUser]"]');
            const passengerEmailField = document.querySelector('[name$="[passengerEmail]"]');

            if (!ticketClassField || !ticketPriceField || !selectedUserField || !passengerEmailField) {
                console.error("Some required fields are missing.");
                return;
            }

            const basePrice = parseFloat(ticketClassField.dataset.basePrice);
            if (isNaN(basePrice)) {
                console.error("Base price is invalid.");
                return;
            }

            const updateTicketPrice = () => {
                const selectedClass = ticketClassField.value;
                let multiplier = 1;
                switch (selectedClass) {
                    case 'Economy': multiplier = 1; break;
                    case 'Business': multiplier = 1.5; break;
                    case 'First_Class': multiplier = 2; break;
                }
                ticketPriceField.value = (basePrice * multiplier).toFixed(2);
            };

            const updatePassengerEmail = () => {
                const selectedOption = selectedUserField.options[selectedUserField.selectedIndex];
                const email = selectedOption ? selectedOption.dataset.email : '';
                passengerEmailField.value = email || '';
            };

            ticketClassField.addEventListener('change', updateTicketPrice);
            selectedUserField.addEventListener('change', updatePassengerEmail);

            updateTicketPrice();
        });

        function selectSeat(button) {
            document.querySelectorAll('.seat').forEach(seat => {
                seat.classList.remove('bg-blue-500', 'hover:bg-blue-600');
                seat.classList.add('bg-green-500', 'hover:bg-green-600');
            });

            button.classList.remove('bg-green-500', 'hover:bg-green-600');
            button.classList.add('bg-blue-500', 'hover:bg-blue-600');

            const selectedSeat = button.dataset.seat;
            const hiddenInput = document.querySelector('[name$="[seatNumber]"]');
            hiddenInput.value = selectedSeat;
        }
    </script>
{% endblock %}
