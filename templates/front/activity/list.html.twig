
{% extends 'front.html.twig' %}

{% block title %}
    {% if is_granted('ROLE_EMPLOYEE') %}Mes Activités{% else %}Gestion des Activités{% endif %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .activity-card {
            position: relative;
            transition: transform 0.2s;
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .assignment-badge {
            position: absolute;
            top: -0.5rem;
            right: -0.5rem;
            background: #3B82F6;
            color: white;
            width: 1.5rem;
            height: 1.5rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            z-index: 10;
        }

        .employee-selector {
            display: none;
            position: absolute;
            z-index: 20;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            width: 18rem;
            padding: 1rem;
            margin-top: 0.5rem;
        }

        .employee-item {
            padding: 0.5rem;
            border-bottom: 1px solid #f1f5f9;
            cursor: pointer;
            transition: background 0.2s;
        }

        .employee-item:hover {
            background: #f8fafc;
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            color: #64748b;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    {% if is_granted('ROLE_EMPLOYEE') %}
        <div class="mb-8 flex items-center justify-between">
            <h1 class="text-2xl font-bold flex items-center">
                <i class="ri-task-line text-blue-500 mr-2"></i>
                Mes Activités Assignées
            </h1>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {% if assignments is defined and assignments is not empty %}
                {% for assignment in assignments %}
                    {% set activity = assignment.activity %}
                    <div class="activity-card hover:shadow-md transition-shadow">
                        <div class="p-6">
                            <div class="flex items-center mb-4">
                                <i class="ri-calendar-event-line text-blue-500 text-xl mr-2"></i>
                                <h3 class="text-lg font-semibold">{{ activity.nomactivity }}</h3>
                            </div>

                            <div class="space-y-2 text-sm text-gray-600">
                                <div class="flex items-center">
                                    <i class="ri-map-pin-line mr-2"></i>
                                    {{ activity.localisation }}
                                </div>
                                <div class="flex items-center">
                                    <i class="ri-time-line mr-2"></i>
                                    {{ activity.datedebut|date('d/m/Y H:i') }}
                                </div>
                                <div class="flex items-center">
                                    <i class="ri-information-line mr-2"></i>
                                    {{ activity.description|slice(0, 50) ~ '...' }}
                                </div>
                            </div>

                            <div class="mt-6">
                                <a href="{{ path('front_activity_detailsEMPLOYEES', {'id': activity.id}) }}"
                                   class="w-full text-center bg-blue-500 hover:bg-blue-600 text-white py-2 rounded-lg block transition-colors">
                                    <i class="ri-eye-line mr-2"></i>Voir détails
                                </a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="col-span-3">
                    <div class="empty-state">
                        <i class="ri-inbox-line text-4xl mb-4"></i>
                        <p class="text-lg">Aucune activité assignée</p>
                    </div>
                </div>
            {% endif %}
        </div>

    {% elseif is_granted('ROLE_RESPONSABLE') %}
        <div class="mb-8 flex items-center justify-between">
            <h1 class="text-2xl font-bold flex items-center">
                <i class="ri-calendar-2-line text-blue-500 mr-2"></i>
                Gestion des Activités
            </h1>
            <a href="{{ path('app_activity_create') }}"
               class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition-colors">
                <i class="ri-add-line mr-2"></i>Nouvelle Activité
            </a>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {% if activities is defined and activities is not empty %}
                {% for activity in activities %}
                    {% set assignmentCount = 0 %}
                    {% if assignments is defined %}
                        {% for assignment in assignments %}
                            {% if assignment.activityId == activity.id %}
                                {% set assignmentCount = assignmentCount + 1 %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}

                    <div class="activity-card hover:shadow-md transition-shadow">
                        <div class="p-6 relative">
                            {% if assignmentCount > 0 %}
                                <div class="assignment-badge">{{ assignmentCount }}</div>
                            {% endif %}

                            <div class="flex items-center mb-4">
                                <i class="ri-calendar-event-line text-blue-500 text-xl mr-2"></i>
                                <h3 class="text-lg font-semibold">{{ activity.nomactivity }}</h3>
                            </div>

                            <div class="space-y-2 text-sm text-gray-600">
                                <div class="flex items-center">
                                    <i class="ri-map-pin-line mr-2"></i>
                                    {{ activity.localisation }}
                                </div>
                                <div class="flex items-center">
                                    <i class="ri-time-line mr-2"></i>
                                    {{ activity.datedebut|date('d/m/Y H:i') }}
                                </div>
                                <div class="flex items-center">
                                    <i class="ri-money-euro-circle-line mr-2"></i>
                                    {{ activity.prixtotal|number_format(2, ',', ' ') }} €
                                </div>
                            </div>

                            <div class="mt-6 relative">
                                <button class="btn-assign w-full bg-blue-500 hover:bg-blue-600 text-white py-2 rounded-lg transition-colors"
                                        data-activity-id="{{ activity.id }}">
                                    <i class="ri-user-add-line mr-2"></i>Assigner
                                </button>

                                <div class="employee-selector" id="selector-{{ activity.id }}">
                                    <div class="max-h-48 overflow-y-auto mb-3">
                                        {% if employees is defined and employees is not empty %}
                                            {% for employee in employees %}
                                                <label class="employee-item flex items-center">
                                                    <input type="checkbox" value="{{ employee.id }}" class="mr-2 rounded text-blue-500">
                                                    <div>
                                                        <div class="font-medium">{{ employee.firstname }} {{ employee.lastname }}</div>
                                                        <div class="text-xs text-gray-500">{{ employee.poste }}</div>
                                                    </div>
                                                </label>
                                            {% endfor %}
                                        {% else %}
                                            <div class="empty-state py-4">
                                                <i class="ri-user-search-line text-2xl mb-2"></i>
                                                <p class="text-sm">Aucun employé disponible</p>
                                            </div>
                                        {% endif %}
                                    </div>
                                    <button class="submit-assignments w-full bg-green-500 hover:bg-green-600 text-white py-2 rounded-lg transition-colors"
                                            data-activity-id="{{ activity.id }}">
                                        Confirmer l'assignation
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="col-span-3">
                    <div class="empty-state">
                        <i class="ri-calendar-line text-4xl mb-4"></i>
                        <p class="text-lg">Aucune activité créée</p>
                    </div>
                </div>
            {% endif %}
        </div>
    {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.btn-assign').forEach(button => {
        button.addEventListener('click', function(e) {
            e.stopPropagation();
            const activityId = this.dataset.activityId;
            const selector = document.getElementById(`selector-${activityId}`);
            document.querySelectorAll('.employee-selector').forEach(el => {
                if (el !== selector) el.style.display = 'none';
            });
            selector.style.display = selector.style.display === 'block' ? 'none' : 'block';
        });
    });

    document.querySelectorAll('.submit-assignments').forEach(button => {
        button.addEventListener('click', async function() {
            const activityId = this.dataset.activityId;
            const checkboxes = document.querySelectorAll(`#selector-${activityId} input[type="checkbox"]:checked`);
            const employeeIds = Array.from(checkboxes).map(cb => cb.value);

            if (employeeIds.length === 0) {
                alert('Veuillez sélectionner au moins un employé');
                return;
            }

            try {
                const response = await fetch(`/activity/${activityId}/assign-employees`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                        // 'X-CSRF-TOKEN': '...'
                    },
                    body: JSON.stringify({ employeeIds })
                });

                const data = await response.json();

                if (data.success) {
                    const card = document.querySelector(`[data-activity-id="${activityId}"]`).closest('.activity-card');
                    let badge = card.querySelector('.assignment-badge');
                    if (badge) {
                        badge.textContent = data.assignedCount;
                    } else {
                        badge = document.createElement('div');
                        badge.className = 'assignment-badge';
                        badge.textContent = data.assignedCount;
                        card.querySelector('.p-6.relative').prepend(badge);
                    }

                    document.getElementById(`selector-${activityId}`).style.display = 'none';
                    checkboxes.forEach(cb => cb.checked = false);
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Une erreur est survenue lors de l\'assignation');
            }
        });
    });

    document.addEventListener('click', (e) => {
        if (!e.target.closest('.employee-selector') && !e.target.closest('.btn-assign')) {
            document.querySelectorAll('.employee-selector').forEach(el => {
                el.style.display = 'none';
            });
        }
    });
});
</script>
{% endblock %}
