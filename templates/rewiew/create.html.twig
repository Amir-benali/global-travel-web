{% extends 'base.html.twig' %}

{% block title %}Create Review{% endblock %}

{% block body %}
    <div class="mx-auto max-w-3xl py-8">
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="p-6 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h2 class="text-xl font-semibold text-gray-800">Add New Review</h2>
                    <a href="{{ path('app_review') }}" class="text-blue-600 hover:text-blue-800 flex items-center">
                        <i class="ri-arrow-left-line mr-1"></i>
                        Back to Home
                    </a>
                </div>
            </div>
            
            <div class="p-6">
                {# Messages Flash #}
           {% for flash_type in [ 'error'] %}
    {% for message in app.flashes(flash_type) %}
        <div class="mb-4 p-4 rounded-lg flex items-start border-l-4 {% if flash_type == 'success' %}bg-green-100 border-green-500 text-green-800{% else %}bg-red-100 border-red-500 text-red-800{% endif %}">
            <div class="flex-shrink-0">
                {% if flash_type == 'success' %}
                    <i class="ri-checkbox-circle-fill text-xl mr-3 text-green-500"></i>
                {% else %}
                    <i class="ri-spam-2-fill text-xl mr-3 text-red-500"></i>
                {% endif %}
            </div>
            <div class="flex-1">
                {{ message }}
                <button type="button" class="float-right hover:opacity-75" onclick="this.parentElement.parentElement.remove()">
                    <i class="ri-close-line text-sm"></i>
                </button>
            </div>
        </div>
    {% endfor %}
{% endfor %}

                {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'data-turbo': 'false'}}) }}
                
                <div class="mb-4">
                    {{ form_label(form.activityId, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(form.activityId, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}}) }}
                    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.activityId) }}</div>
                </div>
                
                <div class="mb-4">
                    {{ form_label(form.note, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    <div class="flex items-center">
                        {% for i in 1..5 %}
                            <button type="button" class="star-rating-btn text-2xl focus:outline-none" data-value="{{ i }}">
                                {% if form.note.vars.value >= i %}
                                    <span class="text-yellow-400">★</span>
                                {% else %}
                                    <span class="text-gray-300">★</span>
                                {% endif %}
                            </button>
                        {% endfor %}
                    </div>
                    {{ form_widget(form.note, {'attr': {'class': 'hidden'}}) }}
                    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.note) }}</div>
                </div>
                
                <div class="mb-4">
                    {{ form_label(form.commentaire, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(form.commentaire, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500', 'rows': 4}}) }}
                    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.commentaire) }}</div>
                </div>

                <div class="mb-4">
                    {{ form_label(form.datereview, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(form.datereview, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500', 'readonly': 'readonly'}}) }}
                    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.datereview) }}</div>
                </div>
{# 
                <div class="mb-4">
                    {{ form_label(form.userid, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(form.userid, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'}}) }}
                    <div class="text-red-500 text-sm mt-1">{{ form_errors(form.userid) }}</div>
                </div> #}

                <div class="flex justify-end">
                    {{ form_widget(form.submit, {'attr': {'class': 'px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'}}) }}
                </div>
                
                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const noteInput = document.getElementById('{{ form.note.vars.id }}');
            const starButtons = document.querySelectorAll('.star-rating-btn');
            
            starButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const value = this.getAttribute('data-value');
                    noteInput.value = value;
                    
                    starButtons.forEach((star, index) => {
                        star.querySelector('span').className = index < value ? 'text-yellow-400' : 'text-gray-300';
                    });
                });
                
                button.addEventListener('mouseover', function() {
                    const value = this.getAttribute('data-value');
                    starButtons.forEach((star, index) => {
                        if (index < value) {
                            star.querySelector('span').className = 'text-yellow-300';
                        }
                    });
                });
                
                button.addEventListener('mouseout', function() {
                    const currentValue = noteInput.value || 0;
                    starButtons.forEach((star, index) => {
                        star.querySelector('span').className = index < currentValue ? 'text-yellow-400' : 'text-gray-300';
                    });
                });
            });
        });
    </script>
{% endblock %}