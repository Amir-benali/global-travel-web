{% extends 'base.html.twig' %}

{% block title %}Users Management{% endblock %}

{% block body %}

<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="bg-white rounded-lg shadow">
        <!-- Table toolbar -->
        <div class="p-4 border-b border-gray-200 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div class="flex items-center">
                <button id="delete-selected" class="flex items-center px-3 py-1 border border-gray-300 rounded-md text-sm text-red-600 hover:bg-red-50 hidden">
                    <i class="ri-delete-bin-line mr-1"></i>
                    Delete Selected
                </button>
            </div>
            
            <form method="get" action="{{ path('app_user') }}" class="w-full sm:w-auto">
                <div class="relative">
                    <i class="ri-search-line absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                    <input 
                        type="text" 
                        name="search"
                        placeholder="Search users..." 
                        value="{{ app.request.query.get('search') }}"
                        class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full sm:w-64"
                    />
                    {% if app.request.query.get('search') %}
                        <a href="{{ path('app_user_index') }}" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                            <i class="ri-close-line"></i>
                        </a>
                    {% endif %}
                </div>
            </form>
        </div>
        
        <!-- Table -->
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="w-12 px-4 py-3">
                            <input type="checkbox" id="select-all" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        </th>
                        <th class="px-4 py-3 text-left text-sm font-medium text-gray-500 sortable" data-field="firstname">
                            <div class="flex items-center cursor-pointer">
                                User Name
                                <svg class="ml-1 w-3 h-3 text-gray-400 sort-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                </svg>
                            </div>
                        </th>
                        <th class="px-4 py-3 text-left text-sm font-medium text-gray-500 sortable" data-field="email">
                            <div class="flex items-center cursor-pointer">
                                Email Address
                                <svg class="ml-1 w-3 h-3 text-gray-400 sort-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                </svg>
                            </div>
                        </th>
                        <th class="px-4 py-3 text-left text-sm font-medium text-gray-500 sortable" data-field="phoneNumber">
                            <div class="flex items-center cursor-pointer">
                                Phone Number
                                <svg class="ml-1 w-3 h-3 text-gray-400 sort-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                </svg>
                            </div>
                        </th>
                        <th class="px-4 py-3 text-left text-sm font-medium text-gray-500 sortable" data-field="roles">
                            <div class="flex items-center cursor-pointer">
                                Role
                                <svg class="ml-1 w-3 h-3 text-gray-400 sort-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                                </svg>
                            </div>
                        </th>
                        <th class="px-4 py-3 text-left text-sm font-medium text-gray-500">
                            <div class="flex items-center">
                                Actions
                            </div>
                        </th>
                    </tr>
                </thead>
                
                
                
                <tbody class="divide-y divide-gray-200 bg-white">
                    {% for user in users %}
                    <tr class="user-row hover:bg-gray-50" data-user-id="{{ user.id }}">
                        <td class="px-4 py-3">
                            <input type="checkbox" class="user-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        </td>
                        <td class="px-4 py-3">
                            <div class="flex items-center">
                                <div class="h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 mr-3">
                                    {{ user.firstname|first|upper }}{{ user.lastname|first|upper }}
                                </div>
                                <span class="text-sm font-medium text-gray-900">
                                    {{ user.firstname }} {{ user.lastname }}
                                </span>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm text-gray-500">{{ user.email }}</td>
                        <td class="px-4 py-3 text-sm text-gray-500">{{ user.phoneNumber ?? '-' }}</td>
                        <td class="px-4 py-3 text-sm text-gray-500">
                            {% if 'ROLE_ADMIN' in user.roles %}
                                <span class="px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full">Admin</span>
                            {% elseif 'ROLE_RESPONSABLE' in user.roles  %}
                                <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">Responsable</span>
                            {% else %}
                                <span class="px-2 py-1 bg-gray-100 text-gray-800 text-xs rounded-full">Employee</span>
                            {% endif %}</td>
                        <td class="px-4 py-3 text-sm">
                            <div class="flex items-center space-x-3">
                                <a href="{{ path('app_user_update', { id: user.id }) }}" 
                                   class="text-blue-400 hover:text-blue-600"
                                   title="Edit">
                                    <i class="ri-pencil-line"></i>
                                </a>
                                <form method="post" action="{{ path('app_user_delete', { id: user.id }) }}" 
                                      onsubmit="return confirm('Are you sure you want to delete this user?')">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
                                    <button type="submit" class="text-red-400 hover:text-red-600" title="Delete">
                                        <i class="ri-delete-bin-line"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                    {% else %}
                    <tr>
                        <td colspan="6" class="px-4 py-8 text-center text-gray-500">
                            <i class="ri-user-search-line text-3xl mb-2 text-gray-300"></i>
                            <p>No users found</p>
                            {% if app.request.query.get('search') %}
                                <a href="{{ path('app_user') }}" class="text-blue-500 hover:underline mt-2 inline-block">
                                    Clear search
                                </a>
                            {% endif %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
      
</div>

{% block javascripts %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.querySelector('input[name="search"]');
        const tbody = document.querySelector('table tbody');
        const sortableHeaders = document.querySelectorAll('th.sortable');
    
        let sortField = 'firstname';
        let sortDirection = 'asc';
    
        function loadUsers() {
            const query = searchInput.value;
    
            const url = new URL('{{ path('app_user') }}', window.location.origin);
            url.searchParams.append('search', query);
            url.searchParams.append('sortField', sortField);
            url.searchParams.append('sortDirection', sortDirection);
    
            fetch(url, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                tbody.innerHTML = html;
            });
        }
    
        searchInput.addEventListener('input', function () {
            loadUsers();
        });
    
        sortableHeaders.forEach(header => {
            header.addEventListener('click', function () {
                const field = this.getAttribute('data-field');
                if (field === sortField) {
                    // Si on clique deux fois sur la même colonne, on inverse le sens
                    sortDirection = (sortDirection === 'asc') ? 'desc' : 'asc';
                } else {
                    sortField = field;
                    sortDirection = 'asc';
                }
                loadUsers();
            });
        });
    });
    </script>
    
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Gestion de la sélection multiple
    const selectAll = document.getElementById('select-all');
    const checkboxes = document.querySelectorAll('.user-checkbox');
    const deleteBtn = document.getElementById('delete-selected');
    
    selectAll.addEventListener('change', function() {
        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAll.checked;
        });
        toggleDeleteButton();
    });
    
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', toggleDeleteButton);
    });
    
    function toggleDeleteButton() {
        const checked = document.querySelectorAll('.user-checkbox:checked');
        deleteBtn.classList.toggle('hidden', checked.length === 0);
    }
    
    // Confirmation avant suppression multiple
    deleteBtn.addEventListener('click', function() {
        const selectedIds = Array.from(document.querySelectorAll('.user-checkbox:checked'))
            .map(checkbox => checkbox.closest('tr').dataset.userId);
        
        if (confirm(`Are you sure you want to delete ${selectedIds.length} selected users?`)) {
            // Implémentez ici la logique de suppression multiple
            console.log('Users to delete:', selectedIds);
        }
    });
});
</script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const searchInput = document.querySelector('input[name="search"]');
    const tbody = document.querySelector('table tbody');

    searchInput.addEventListener('input', function () {
        const query = this.value;

        fetch('{{ path('app_user') }}?search=' + encodeURIComponent(query), {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            tbody.innerHTML = html;
        });
    });
});
</script>
{% endblock %}

{% endblock %}
